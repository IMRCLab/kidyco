---
format:
  html:
    code-fold: true
jupyter: python3
---

# Python Playground

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

## MeshCat

```{python}
#| output: false
#| echo: false
import meshcat
from meshcat.geometry import Box
from meshcat.animation import Animation
import meshcat.transformations as tf

vis = meshcat.Visualizer()
```

```{python}
vis["box1"].set_object(Box([0.1, 0.2, 0.3]))

anim = Animation()

with anim.at_frame(vis, 0) as frame:
    frame["box1"].set_transform(tf.translation_matrix([0, 0, 0]))
with anim.at_frame(vis, 30) as frame:
    frame["box1"].set_transform(tf.translation_matrix([0, 1, 0]))
    
vis.set_animation(anim)
vis.render_static()
```
